{"version":3,"sources":["components/todoHeader.jsx","components/todoListItem.jsx","components/todoList.jsx","components/todoForm.jsx","components/todoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["TodoHeader","react_default","a","createElement","Component","TodoListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickClose","bind","assertThisInitialized","onClickDone","index","parseInt","removeItem","markTodoDone","todoClass","item","done","className","aria-hidden","onClick","value","type","TodoList","items","map","todoListItem","key","TodoForm","onSubmit","refs","itemName","focus","event","preventDefault","newItemValue","addItem","form","reset","ref","placeholder","todoItems","push","TodoApp","state","todoItem","unshift","length","setState","itemIndex","splice","todo","id","todoHeader","todoList","todoForm","App","todoApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.588c9601.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TodoHeader extends Component {\r\n    render() {\r\n        return <h1>Todo list</h1>;\r\n    }\r\n}\r\n\r\nexport default TodoHeader;","import React, { Component } from 'react';\r\n\r\nclass TodoListItem extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickClose = this.onClickClose.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickClose() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.removeItem(index);\r\n    }\r\n    onClickDone() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.markTodoDone(index);\r\n    }\r\n    render () {\r\n      var todoClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n      return(\r\n        <li className=\"list-group-item \">\r\n          <div className={todoClass}>\r\n            <span className=\"glyphicon glyphicon-ok icon\" aria-hidden=\"true\" onClick={this.onClickDone}></span>\r\n            {this.props.item.value}\r\n            <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\r\n          </div>\r\n        </li>     \r\n      );\r\n    }\r\n}\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport TodoListItem from \"./todoListItem\";\r\n\r\nclass TodoList extends Component {\r\n    render() {\r\n        var items = this.props.items.map((item, index) => {\r\n            return (\r\n              <TodoListItem key={index} item={item} index={index} removeItem={this.props.removeItem} markTodoDone={this.props.markTodoDone} />\r\n            );\r\n        });\r\n        return (\r\n            <ul className=\"list-group mainlistbox\"> {items} </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\n\r\nclass TodoForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n      this.refs.itemName.focus();\r\n    }\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemValue = this.refs.itemName.value;\r\n      \r\n      if(newItemValue) {\r\n        this.props.addItem({newItemValue});\r\n        this.refs.form.reset();\r\n      }\r\n    }\r\n    render () {\r\n      return (\r\n        <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline adding\">\r\n          <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new todo...\"/>\r\n          <button type=\"submit\" className=\"btn btn-default\">Add</button> \r\n        </form>\r\n      );   \r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React, { Component } from 'react';\r\n\r\nimport TodoHeader from \"./todoHeader\";\r\nimport TodoList from \"./todoList\";\r\nimport TodoForm from \"./todoForm\";\r\n\r\nvar todoItems = [];\r\ntodoItems.push({index: 1, value: \"learn react\", done: true});\r\ntodoItems.push({index: 2, value: \"learn Angular\", done: false});\r\ntodoItems.push({index: 3, value: \"learn JQuery\", done: true});\r\nclass TodoApp extends Component {\r\n    constructor (props) {\r\n      super(props);\r\n      this.addItem = this.addItem.bind(this);\r\n      this.removeItem = this.removeItem.bind(this);\r\n      this.markTodoDone = this.markTodoDone.bind(this);\r\n      this.state = {todoItems:todoItems};\r\n    }\r\n    addItem(todoItem) {\r\n      todoItems.unshift({\r\n        index: todoItems.length+1, \r\n        value: todoItem.newItemValue, \r\n        done: false\r\n      });\r\n      this.setState({todoItems: todoItems});\r\n    }\r\n    removeItem (itemIndex) {\r\n      todoItems.splice(itemIndex, 1);\r\n      this.setState({todoItems: todoItems});\r\n    }\r\n    markTodoDone(itemIndex) {\r\n      var todo = todoItems[itemIndex];\r\n      todoItems.splice(itemIndex, 1);\r\n      todo.done = !todo.done;\r\n      todo.done ? todoItems.push(todo) : todoItems.unshift(todo);\r\n      this.setState({todoItems: todoItems});  \r\n    }\r\n    render() {\r\n      return (\r\n        <div id=\"main\">\r\n          <TodoHeader />\r\n          <TodoList items={this.state.todoItems} removeItem={this.removeItem} markTodoDone={this.markTodoDone}/>\r\n          <TodoForm addItem={this.addItem} />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default TodoApp;","import React, { Component } from 'react';\nimport TodoApp from './components/todoApp';\nimport './App.css';\nimport './components/CSS/stylesheet.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <TodoApp>\n\n      </TodoApp>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}